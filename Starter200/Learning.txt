# Generalized Learnings for Problem Solving

1. Break Down Problems into Smaller Parts
   - Any big problem can be solved by splitting it into smaller, easier steps.
   - Formula: Total Work = Sum of Small Parts
   - Example (Real Life): 
       Suppose you need to distribute 57 chocolates into boxes of size 10.
       Step 1: Each box can hold 10 chocolates.
       Step 2: Divide total chocolates by capacity → 57 ÷ 10 = 5 remainder 7.
       Step 3: So, 6 boxes are needed.
       This shows how breaking the task into smaller "box-filling" steps makes it manageable.

2. Look for Patterns and Reuse Them
   - Many problems repeat after a certain interval (cycle).
   - Formula: Position = index % cycle_length
   - Example (Real Life): 
       A traffic signal cycles as Red → Yellow → Green → Red → ...
       If the cycle length is 3, then the 10th signal can be found using 10 % 3 = 1.
       That means it will be Yellow.
       This avoids writing the sequence 10 times and uses the cycle pattern instead.

3. Use Mathematical Formulas for Efficiency
   - Instead of simulating step by step, use formulas to save time.
   - Example Formula (Ceiling Division): 
         Minimum Groups = ceil(n / k) = (n + k - 1) // k
       where:
         n = total items
         k = capacity of one group
   - Example (Real Life): 
       You want to hire taxis to take 53 people, with each taxi holding 4 passengers.
       Groups = (53 + 4 - 1) // 4 = 56 // 4 = 14 taxis.
       Formula saves writing long logic and instantly gives the answer.

4. Observe Constraints and Optimize
   - Always check given limits (like size of input n ≤ 10^6).
   - Helps in deciding:
       - Whether a brute force (try all) approach will work.
       - Or whether you need a smarter formula.
   - Example (Real Life): 
       If you are delivering food to 1000 houses in 2 hours, 
       you cannot check each house one by one. You must group houses into routes.
       Constraints push you towards efficient planning.

5. Build Intuition from Hypothetical Situations
   - Use real-world analogies to make abstract problems clear.
   - Examples:
       a) **Distributing Cakes**:
          If you have 25 cakes and each box can hold 6 cakes, 
          Formula → (25 + 6 - 1) // 6 = 30 // 6 = 5 boxes.
       b) **Even-Odd Alternating Pattern**:
          Walking on tiles where red = odd step, blue = even step.
          Knowing the 7th step → 7 is odd → Red tile. (Simple parity pattern).
       c) **Repeating String ("abcabc...")**:
          If a sequence repeats every 3 letters, the nth letter is found by:
          index = (n - 1) % 3
          If index = 0 → 'a', 1 → 'b', 2 → 'c'.
          For n = 10 → (10 - 1) % 3 = 0 → 'a'.

6. General Problem-Solving Mindset
   - Before solving, always ask:
       a) Can the problem be broken into smaller steps?
       b) Is there a repeating pattern I can exploit?
       c) Can I use a direct formula instead of simulating?
       d) What are the input constraints and do they allow brute force?
       e) Is there a real-life analogy to simplify the intuition?

   - Example Combined:
       Imagine organizing a school trip.
       - Total students = 120 (n = 120)
       - Bus capacity = 45 (k = 45)
       - Buses needed = (120 + 45 - 1) // 45 = 164 // 45 = 3 buses.
       - Seating pattern inside each bus repeats every row (2 seats + 3 seats).
         A student's seat can be quickly found using modulo.
       - By combining breakdown, patterns, formulas, and real-life analogy,
         the problem becomes intuitive and efficient to solve.
